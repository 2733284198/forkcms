<?php

namespace ForkCMS\Bundle\InstallerBundle\Form\Type;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormView;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormBuilderInterface;

use Backend\Core\Engine\Model as BackendModel;

/**
 * Builds the form to select modules to install
 *
 * @author Wouter Sioen <wouter.sioen@wijs.be>
 */
class ModulesType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add(
                'modules',
                'choice',
                array(
                    'choices'  => $this->getInstallableModules(),
                    'expanded' => true,
                    'multiple' => true,
                )
            )
            ->add(
                'example_data',
                'checkbox',
                array(
                    'attr' => array('checked' => 'checked'),
                    'label' => 'Install example data',
                )
            )
            ->add(
                'different_debug_email',
                'checkbox',
                array(
                    'label' => 'Use a specific debug email address',
                )
            )
            ->add(
                'debug_email',
                'email'
            )
        ;
    }

    public function getName()
    {
        return 'install_modules';
    }

    /**
     * Get all the modules that can be installed
     *
     * @return array The modules
     */
    protected function getInstallableModules()
    {
        $modules = array_unique(array_merge(
            $this->getRequiredModules(),
            BackendModel::getModulesOnFilesystem(false)
        ));
        $this->removeHiddenModules($modules);

        return array_combine($modules, $modules);
    }

    /**
     * Make sure the required modules are checked and can't be desalbed
     *
     * @param  FormView      $view    The FormView generated by Symfony
     * @param  FormInterface $form    The form itself
     * @param  array         $options The array options
     */
    public function finishView(FormView $view, FormInterface $form, array $options)
    {
        foreach ($view->children['modules']->children as $module) {
            if (in_array($module->vars['value'], $this->getRequiredModules())) {
                $module->vars['attr']['disabled'] = 'disabled';
                $module->vars['checked'] = true;
            }
        }
    }

    /**
     * Remove the hidden modules from the modules array
     *
     * @param  array $modules The modules we wan't to clean up
     */
    protected function removeHiddenModules(&$modules)
    {
        foreach ($modules as $key => $module) {
            if (in_array($module, $this->getHiddenModules())) {
                unset($modules[$key]);
            }
        }
    }

    /**
     * Fetches the required modules
     *
     * @return array
     */
    protected function getRequiredModules()
    {
        return array(
            'Locale',
            'Settings',
            'Users',
            'Groups',
            'Extensions',
            'Pages',
            'Search',
            'ContentBlocks',
            'Tags',
        );
    }

    /**
     * Fetches the hidden modules
     *
     * @return array
     */
    protected function getHiddenModules()
    {
        return array(
            'Authentication',
            'Dashboard',
            'Error',
        );
    }
}
